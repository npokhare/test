{"version":3,"sources":["./src/environments/environment.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA,gFAAgF;AAChF,0EAA0E;AAC1E,gEAAgE;AAEzD,MAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;CAClB,CAAC;AAEF;;;;;;GAMG;AACH,mEAAmE;;;;;;;;;;;;;ACfnE;AAAA;AAAA;AAAA;AAA0C;;;AAQnC,MAAM,YAAY;IAEvB,YAAqB,EAAoB;QAApB,OAAE,GAAF,EAAE,CAAkB;IAEzC,CAAC;IAED,EAAE;QACA,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;QAClB,IAAI,CAAC,EAAE,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC,GAAG,CAAC,EAAC,IAAI,EAAE,IAAI,IAAI,EAAC,CAAC,CAAC;IACpD,CAAC;;wEATU,YAAY;4FAAZ,YAAY;QCRzB,4EAAuB;QAAf,oIAAS,QAAI,IAAC;QAAC,6DAAE;QAAA,4DAAS;;6FDQrB,YAAY;cALxB,uDAAS;eAAC;gBACT,QAAQ,EAAE,UAAU;gBACpB,WAAW,EAAE,sBAAsB;gBACnC,SAAS,EAAE,CAAC,qBAAqB,CAAC;aACnC;;;;;;;;;;;;;;AEPD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA0D;AACjB;AACzC,8BAA8B;AACoB;AACe;AAElB;;;AAG/C,IAAI,cAAc,GAAG;IACnB,MAAM,EAAE,yCAAyC;IACjD,UAAU,EAAE,mCAAmC;IAC/C,SAAS,EAAE,mBAAmB;IAC9B,aAAa,EAAE,+BAA+B;IAC9C,iBAAiB,EAAE,cAAc;IACjC,KAAK,EAAE,2CAA2C;IAClD,aAAa,EAAE,cAAc;CAC9B,CAAC;AAeK,MAAM,SAAS;;wFAAT,SAAS,cAFR,2DAAY;4IAEb,SAAS,mBAHT,EAAE,YANJ;YACP,uEAAa;YACb,gBAAgB;YAChB,+DAAiB,CAAC,aAAa,CAAC,cAAc,CAAC;YAC/C,8EAAsB,CAAC,YAAY;SACpC;mIAIU,SAAS,mBAXlB,2DAAY,aAGZ,uEAAa,mEAGb,8EAAsB,CAAC,YAAY;;6FAK1B,SAAS;cAbrB,sDAAQ;eAAC;gBACR,YAAY,EAAE;oBACZ,2DAAY;iBACb;gBACD,OAAO,EAAE;oBACP,uEAAa;oBACb,gBAAgB;oBAChB,+DAAiB,CAAC,aAAa,CAAC,cAAc,CAAC;oBAC/C,8EAAsB,CAAC,YAAY;iBACpC;gBACD,SAAS,EAAE,EAAE;gBACb,SAAS,EAAE,CAAC,2DAAY,CAAC;aAC1B;;;;;;;;;;;;;;AC/BD;AAAA;AAAA;AAAA;AAAA;AAA+C;AAIU;;;AAEzD,IAAI,qEAAW,CAAC,UAAU,EAAE;IAC1B,oEAAc,EAAE,CAAC;CAClB;AAED,2EAAwB,gBAAgB,CAAC,0DAAU;KAChD,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC;;;;;;;;;;;;ACXpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,qC","file":"main.js","sourcesContent":["// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component } from '@angular/core';\nimport { AngularFirestore } from '@angular/fire/firestore';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n\n  constructor (private db: AngularFirestore){\n\n  }\n\n  go(){\n    console.log(\"go\");\n    this.db.collection('items').add({date: new Date});\n  }\n}\n","<button (click)=\"go()\">GO</button>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n// 1. Import the libs you need\nimport { AngularFireModule } from '@angular/fire';\nimport { AngularFirestoreModule } from '@angular/fire/firestore';\n\nimport { AppComponent } from './app.component';\n\n\nvar firebaseConfig = {\n  apiKey: \"AIzaSyAg-xZ62pB7Ab8Wb8K368DQPB5XYgJczXE\",\n  authDomain: \"hello-world-3bf0d.firebaseapp.com\",\n  projectId: \"hello-world-3bf0d\",\n  storageBucket: \"hello-world-3bf0d.appspot.com\",\n  messagingSenderId: \"199457464687\",\n  appId: \"1:199457464687:web:f2878974a35243ea8e089a\",\n  measurementId: \"G-7PWZDQNHRG\"\n};\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    // 3. Initialize\n    AngularFireModule.initializeApp(firebaseConfig),\n    AngularFirestoreModule // firestore\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}